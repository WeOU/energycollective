version: "3"
services:
  raiden1:
    build:
      context: .
      dockerfile: raiden_webui.Dockerfile
      args:
        RAIDEN_TAG: ${RAIDEN_VERSION}
    ports:
      - "40001:40001/udp"
      - "5002:5001"
    volumes:
      - ${PARITY_DIR}/keys:/keys
      - ${PARITY_DIR}/pass.txt:/pass.txt
      - ${RAIDEN_DIR}/data1:/raiden_data
      - ${RAIDEN_DIR}/raiden1.txt:/logfile.txt
    working_dir: /apps/raiden
    command:
      --keystore-path /keys/test
      --address ${ADDRESS}
      --password-file /pass.txt
      --web-ui
      --rpc
      --eth-rpc-endpoint http://parity:8545
      --eth-client-communication
      --logging :DEBUG
      --listen-address 0.0.0.0:40001
      --rpccorsdomain http://localhost:*/*,raiden2:*/*
      --sync-check
      --api-address 0.0.0.0:5001
      --datadir /raiden_data
      --eth-client-communication
      --nat ext:81.161.138.108:40001
      --logfile /logfile.txt
#      --rpccorsdomain http://0.0.0.0:*/*
      # --nat ext:parity
    links:
      - parity
    # networks:
    #   - backend

  # raiden2:
  #   build:
  #     context: .
  #     dockerfile: raiden_webui.Dockerfile
  #     args:
  #       RAIDEN_TAG: ${RAIDEN_VERSION}
  #   ports:
  #     - "40002:40001/udp"
  #     - "5003:5001"
  #   volumes:
  #     - ${PARITY_DIR}/keys:/keys
  #     - ${PARITY_DIR}/pass.txt:/pass.txt
  #   working_dir: /apps/raiden
  #   command:
  #     --keystore-path /keys/test
  #     --address ${ADDRESS2}
  #     --password-file /pass.txt
  #     --web-ui
  #     --rpc
  #     --api-address 0.0.0.0:5001
  #     --rpccorsdomain http://0.0.0.0:*/*
  #     --eth-rpc-endpoint http://parity:8545
  #     --eth-client-communication
  #     --logging :DEBUG
  #     # --nat ext:parity
  #   networks:
  #     - backend


  parity:
    image: parity/parity:${PARITY_VERSION}
    ports:
      # - "8080:8080"
      - "8180:8180"
      - "8545:8545"
      - "8546:8546"
      - "30303:30303"
      - "30303:30303/udp"
    # networks:
    #   - backend
    command:
      --warp
      --chain ropsten
      --ui-interface all
      --ui-no-validation
      --jsonrpc-interface all
      --jsonrpc-hosts all
      --jsonrpc-cors all
      --jsonrpc-apis all
      --ws-origins all
      --ws-interface all
      --bootnodes "enode://20c9ad97c081d63397d7b685a412227a40e23c8bdc6688c6f37e97cfbc22d2b4d1db1510d8f61e6a8866ad7f0e17c02b14182d37ea7c3c8b9c2683aeb6b733a1@52.169.14.227:30303,enode://6ce05930c72abc632c58e2e4324f7c7ea478cec0ed4fa2528982cf34483094e9cbc9216e7aa349691242576d552a2a56aaeae426c5303ded677ce455ba1acd9d@13.84.180.240:30303"
      ui
      # --unsafe-expose
    volumes:
      - ethereum:/root/.local/share/io.parity.ethereum/chains
      - ${PARITY_DIR}:/backup
      - /etc/localtime:/etc/localtime:ro
      - ${PARITY_DIR}/keys:/root/.local/share/io.parity.ethereum/keys
      # - ../parityio/config.toml:/root/.local/share/io.parity.ethereum/config.toml
#
#  geth:
#    image: ethereum/client-go:latest
#    ports:
#      - "8547:8545"
#      - "30304:30303"
#      - "3000:3000"
#    command:
#      --testnet
#      --rpc
#      --fast
#      --rpcapi eth,net,web3
#      --rpcport 8545
#      --rpcaddr "0.0.0.0"
#      --bootnodes "enode://20c9ad97c081d63397d7b685a412227a40e23c8bdc6688c6f37e97cfbc22d2b4d1db1510d8f61e6a8866ad7f0e17c02b14182d37ea7c3c8b9c2683aeb6b733a1@52.169.14.227:30303,enode://6ce05930c72abc632c58e2e4324f7c7ea478cec0ed4fa2528982cf34483094e9cbc9216e7aa349691242576d552a2a56aaeae426c5303ded677ce455ba1acd9d@13.84.180.240:30303"
#    volumes:
#      - gethereum:/root/.ethereum/testnet/geth/chaindata
#      - ./geth:/backup
#      - ./geth/keystore:/root/.ethereum/testnet/keystore
#      #- ./geth:/root/.ethereum
#    networks:
#      - backend



  # trustlines:
  #   build: trustlines
  #   networks:
  #     - backend
  #   volumes:
  #     - ./trustlines/contracts:/contracts
  #   command: sleep 1000

  # ipfs:
  #   #image: ipfs/go-ipfs:v0.4.3-rc3
  #   image: ipfs/go-ipfs:v0.4.12-rc1
  #   ports:
  #     - "8081:8080"
  #     - "4001"
  #     - "5001"
  #   environment:
  #     - IPFS_PATH=/data/ipfs
  #   volumes:
  #     #- ./start_ipfs.sh:/usr/local/bin/start_ipfs
  #     - ./ipfs/staging:/export
  #     - ./ipfs/data:/data/ipfs
  #   networks:
  #     - backend

# networks:
#   backend:

volumes:
  ethereum:
    external:
      name: energycollective_ethereum
  #gethereum:
